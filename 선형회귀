import numpy as np
import matplotlib.pyplot as plt
import tensorflow as tf
# 데이터 생성
x = np.arange(0, 300)
y = np.random.uniform(x/2,3*x,300)
model = tf.keras.models.Sequential()
model.add(tf.keras.layers.Dense(1, input_dim=1))  # 단순 선형 회귀
# 모델 컴파일
model.compile(optimizer='adam', loss='mean_squared_error')
# 모델 훈련
hist = model.fit(x, y, epochs=1000, verbose=0)

# 훈련 과정 시각화
plt.plot(hist.history['loss'])
plt.title('Loss')
plt.xlabel('Epoch')
plt.ylabel('Loss')
plt.show()

# 예측 및 시각화
line_x = np.arange(min(x), max(x), 0.01)
line_y = model.predict(line_x)

plt.plot(line_x, line_y, 'r-', label='Prediction')
plt.plot(x, y, 'bo', label='Training Data')
plt.title('Linear Regression Model')
plt.xlabel('Input')
plt.ylabel('Output')
plt.legend()
plt.show()

# 모델 평가
loss = model.evaluate(x, y, verbose=2)
print('Loss:', loss)

# 모델 테스트
for i in range(1, 8):
    print(f'Input: {i}, Output: {model.predict(np.array([i]))[0][0]}')
